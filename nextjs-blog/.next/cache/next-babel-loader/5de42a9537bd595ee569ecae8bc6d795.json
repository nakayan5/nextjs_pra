{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u4E2D\\u6751\\u53CB\\u54C9\\\\practice\\\\nextjs-blog\\\\nextjs-blog\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Head from 'next/head'\nimport Layout, { siteTitle } from '../components/layout';\nimport utilStyles from '../styles/utils.module.css';\nimport Link from 'next/link';\nimport Date from '../components/date'; // 本質的には、getStaticProps を使うことで Next.js にこう伝えることができるということです。\n// 「このページにはいくつか外部に依存しているデータがあるよ。だからビルド時にこのページをプリレンダリングするときは、まずその依存関係をしっかり解決してよ！」\n\n// console.log(allPostsData);\n//       [\n//         {\n//           id: 'ssg-ssr',\n//           title: 'When to Use Static Generation v.s. Server-side Rendering',\n//           date: '2020-01-02'\n//         },\n//         {\n//           id: 'pre-rendering',\n//           title: 'Two Forms of Pre-rendering',\n//           date: '2020-01-01'\n//         }\n//       ]\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  var _this = this;\n\n  var allPostsData = _ref.allPostsData;\n  return __jsx(Layout, {\n    home: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, siteTitle)), __jsx(\"section\", {\n    className: utilStyles.headingMd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"[Your Self Introduction]\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"(This is a sample website - you\\u2019ll be building a site like this on\", ' ', __jsx(\"a\", {\n    href: \"https://nextjs.org/learn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"our Next.js tutorial\"), \".)\")), __jsx(\"section\", {\n    className: \"\".concat(utilStyles.headingMd, \" \").concat(utilStyles.padding1px),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: utilStyles.headingLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Blog\"), __jsx(\"ul\", {\n    className: utilStyles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, allPostsData.map(function (_ref2) {\n    var id = _ref2.id,\n        date = _ref2.date,\n        title = _ref2.title;\n    return __jsx(\"li\", {\n      className: utilStyles.listItem,\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      href: \"/posts/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, title)), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), __jsx(\"small\", {\n      className: utilStyles.lightText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, __jsx(Date, {\n      dateString: date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    })));\n  }))));\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/中村友哉/practice/nextjs-blog/nextjs-blog/pages/index.js"],"names":["Layout","siteTitle","utilStyles","Link","Date","Home","allPostsData","headingMd","padding1px","headingLg","list","map","id","date","title","listItem","lightText"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;AACA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,IAAT,OAAgC;AAAA;;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AAC7C,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,SAAR,CADJ,CADF,EAIE;AAAS,IAAA,SAAS,EAAEC,UAAU,CAACK,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFACqE,GADrE,EAEE;AAAG,IAAA,IAAI,EAAC,0BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,OAFF,CAJF,EAWE;AAAS,IAAA,SAAS,YAAKL,UAAU,CAACK,SAAhB,cAA6BL,UAAU,CAACM,UAAxC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEN,UAAU,CAACO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAI,IAAA,SAAS,EAAEP,UAAU,CAACQ,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YAAY,CAACK,GAAb,CAAiB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,IAAP,SAAOA,IAAP;AAAA,QAAaC,KAAb,SAAaA,KAAb;AAAA,WACd;AAAI,MAAA,SAAS,EAAEZ,UAAU,CAACa,QAA1B;AAAoC,MAAA,GAAG,EAAEH,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,mBAAYA,EAAZ,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,KAAJ,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAO,MAAA,SAAS,EAAEZ,UAAU,CAACc,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,UAAU,EAAEH,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADc;AAAA,GAAjB,CADL,CAFJ,CAXF,CADF;AA8BD;KA/BuBR,I","sourcesContent":["// import Head from 'next/head'\nimport Layout, { siteTitle } from '../components/layout'\nimport utilStyles from '../styles/utils.module.css'\nimport { getSortedPostsData } from '../lib/posts'\nimport Link from 'next/link'\nimport Date from '../components/date'\n\n// 本質的には、getStaticProps を使うことで Next.js にこう伝えることができるということです。\n// 「このページにはいくつか外部に依存しているデータがあるよ。だからビルド時にこのページをプリレンダリングするときは、まずその依存関係をしっかり解決してよ！」\n\nexport async function getStaticProps() {\n  const allPostsData = getSortedPostsData()\n  \n  return {\n    props: {\n      allPostsData\n    }\n  }\n}\n\n// console.log(allPostsData);\n//       [\n//         {\n//           id: 'ssg-ssr',\n//           title: 'When to Use Static Generation v.s. Server-side Rendering',\n//           date: '2020-01-02'\n//         },\n//         {\n//           id: 'pre-rendering',\n//           title: 'Two Forms of Pre-rendering',\n//           date: '2020-01-01'\n//         }\n//       ]\n\nexport default function Home({ allPostsData }) {\n  return (\n    <Layout home>\n      <Head>\n          <title>{siteTitle}</title>\n      </Head>\n      <section className={utilStyles.headingMd}>\n        <p>[Your Self Introduction]</p>\n        <p>\n          (This is a sample website - you’ll be building a site like this on{' '}\n          <a href=\"https://nextjs.org/learn\">our Next.js tutorial</a>.)\n        </p>\n      </section>\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n          <h2 className={utilStyles.headingLg}>Blog</h2>\n          <ul className={utilStyles.list}>\n              {allPostsData.map(({ id, date, title }) => (\n                  <li className={utilStyles.listItem} key={id}>\n                    <Link href={`/posts/${id}`}>\n                      <a>{title}</a>\n                    </Link>\n                    <br />\n                    <small className={utilStyles.lightText}>\n                      <Date dateString={date} />\n                    </small>\n                  </li>\n              ))}\n          </ul>\n      </section>\n    </Layout>\n  )\n} \n"]},"metadata":{},"sourceType":"module"}