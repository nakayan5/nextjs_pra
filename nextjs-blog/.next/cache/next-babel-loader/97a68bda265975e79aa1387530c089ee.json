{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u4E2D\\u6751\\u53CB\\u54C9\\\\practice\\\\nextjs-blog\\\\nextjs-blog\\\\pages\\\\posts\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/layout';\nimport Head from 'next/head';\nimport Date from '../../components/date';\nimport utilStyles from '../../styles/utils.module.css';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var postData = _ref.postData;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, postData.title)), __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: utilStyles.headingXl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, postData.title), __jsx(\"div\", {\n    className: utilStyles.lightText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(Date, {\n    dateString: postData.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: postData.contentHtml\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })));\n} // getStaticPathsとgetStaticProps内のコードはサーバサイド側のコード\n// なので内のコードはサーバサイドで動いている\n// getStaticPathsでどんなページを表示する可能性があるかを判断する\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/中村友哉/practice/nextjs-blog/nextjs-blog/pages/posts/[id].js"],"names":["Layout","Head","Date","utilStyles","Post","postData","title","headingXl","lightText","date","__html","contentHtml"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AAGA,eAAe,SAASC,IAAT,OAA4B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACvC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,QAAQ,CAACC,KAAjB,CADJ,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAEH,UAAU,CAACI,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCF,QAAQ,CAACC,KAA/C,CADA,EAEA;AAAK,IAAA,SAAS,EAAEH,UAAU,CAACK,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAEH,QAAQ,CAACI,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFA,EAKA;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEL,QAAQ,CAACM;AAAnB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CAJF,CADF;AAcH,C,CAED;AACA;AAEA;;KApBwBP,I","sourcesContent":["import Layout from '../../components/layout'\r\nimport { getAllPostIds, getPostData } from '../../lib/posts'\r\nimport Head from 'next/head'\r\nimport Date from '../../components/date'\r\nimport utilStyles from '../../styles/utils.module.css'\r\n\r\n\r\nexport default function Post({ postData }) {\r\n    return (\r\n      <Layout>\r\n        <Head>\r\n            <title>{postData.title}</title>\r\n        </Head>\r\n        <article>\r\n        <h1 className={utilStyles.headingXl}>{postData.title}</h1>\r\n        <div className={utilStyles.lightText}>\r\n          <Date dateString={postData.date} />\r\n        </div>\r\n        <div dangerouslySetInnerHTML={{ __html: postData.contentHtml }} />\r\n      </article>\r\n    </Layout>\r\n    )\r\n}\r\n\r\n// getStaticPathsとgetStaticProps内のコードはサーバサイド側のコード\r\n// なので内のコードはサーバサイドで動いている\r\n\r\n// getStaticPathsでどんなページを表示する可能性があるかを判断する\r\nexport async function getStaticPaths() {\r\n    // pathsは配列\r\n    const paths = getAllPostIds()\r\n    return {\r\n      paths,\r\n      fallback: false\r\n    }\r\n}\r\n\r\n// console.log(paths);\r\n//     [ \r\n//       { params: { id: 'pre-rendering' } }, \r\n//       { params: { id: 'ssg-ssr' } } \r\n//     ]\r\n\r\n\r\n// 最後に、ここでまた getStaticProps を実装します。\r\n// 今回は、受け取ったidに基づいて必要なデータを取得します。\r\n// getStaticProps は params を受け取りますが、そこには id が含まれています。\r\n// getStaticPropsでデータを取得する\r\nexport async function getStaticProps({ names }) {\r\n    const postData = await getPostData(names.id)\r\n    return {\r\n      props: {\r\n        postData\r\n      }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}